[
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Get Market Data",
    "path": "/1/market/data",
    "method": "GET",
    "required_parameters": [],
    "optional_parameters": ["id", "asset", "symbol", "blockchain"],
    "description": "Retrieves market data for a specific asset."
  },
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Get Market Data (batch)",
    "path": "/1/market/multi-data",
    "method": "GET",
    "required_parameters": [],
    "optional_parameters": ["ids", "assets", "symbols", "blockchains"],
    "description": "Retrieves market data for multiple assets in a single request."
  },
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Get Market Pair",
    "path": "/1/market/pair",
    "method": "GET",
    "required_parameters": ["pair"],
    "description": "Retrieves market data for a specific trading pair."
  },
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Get All Pairs",
    "path": "/1/market/pairs",
    "method": "GET",
    "required_parameters": [],
    "description": "Retrieves all available trading pairs."
  },
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Get Pair Trades",
    "path": "/1/market/trades-pair",
    "method": "GET",
    "required_parameters": ["pair"],
    "description": "Retrieves trades for a specific trading pair."
  },
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Get Historical Market Data",
    "path": "/1/market/history",
    "method": "GET",
    "required_parameters": [],
    "optional_parameters": ["id", "from", "to"],
    "description": "Retrieves historical market data for a specific asset."
  },
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Get Historical Market Data (batch)",
    "path": "/1/market/multi-history",
    "method": "GET",
    "required_parameters": [],
    "optional_parameters": ["ids", "froms", "tos", "symbols", "assets", "blockchains", "period"],
    "description": "Retrieves historical market data for multiple assets."
  },
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Get Historical Pair Data (OHLCV)",
    "path": "/1/market/history-pair",
    "method": "GET",
    "required_parameters": ["pair", "from", "to"],
    "description": "Retrieves historical OHLCV data for a trading pair."
  },
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Query Asset Data",
    "path": "/1/market/query",
    "method": "GET",
    "required_parameters": [],
    "description": "Queries asset data with flexible filters."
  },
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Query Token Data",
    "path": "/1/market/query/token",
    "method": "GET",
    "required_parameters": [],
    "description": "Queries token data."
  },
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Get Token Holders",
    "path": "/1/market/token-holders",
    "method": "GET",
    "required_parameters": ["tokenAddress"],
    "description": "Retrieves token holders for a contract address"
  },
  {
    "endpoint_group": "Octopus - Market API",
    "name": "Get Blockchain Pairs",
    "path": "/1/market/blockchain-pairs",
    "method": "GET",
    "required_parameters": ["blockchain"],
    "description": "Retrieves pairs for a specific blockchain."
  },
  {
    "endpoint_group": "[BETA] Wallet Explorer API",
    "name": "Get NFTs Holdings",
    "path": "/1/wallet/nfts",
    "method": "GET",
    "required_parameters": ["wallet"],
    "description": "Retrieves NFT holdings for a wallet."
  },
  {
    "endpoint_group": "[BETA] Wallet Explorer API",
    "name": "Get Historical Net Worth",
    "path": "/1/wallet/history",
    "method": "GET",
    "required_parameters": ["wallet", "from", "to"],
    "description": "Retrieves historical net worth for a wallet."
  },
  {
    "endpoint_group": "[BETA] Wallet Explorer API",
    "name": "Get Crypto Holdings",
    "path": "/1/wallet/portfolio",
    "method": "GET",
    "required_parameters": ["wallet"],
    "description": "Retrieves crypto holdings for a wallet."
  },
  {
    "endpoint_group": "[BETA] Wallet Explorer API",
    "name": "Get Crypto Holdings (batch)",
    "path": "/1/wallet/multi-portfolio",
    "method": "GET",
    "required_parameters": ["wallets"],
    "description": "Retrieves crypto holdings for multiple wallets."
  },
  {
    "endpoint_group": "[BETA] Wallet Explorer API",
    "name": "Get Defi-Positions Holdings",
    "path": "/1/wallet/defi-positions",
    "method": "GET",
    "required_parameters": ["wallet"],
    "description": "Retrieves DeFi positions for a wallet"
  },
  {
    "endpoint_group": "[BETA] Wallet Explorer API",
    "name": "Get Historical Transactions",
    "path": "/1/wallet/transactions",
    "method": "GET",
    "required_parameters": ["wallet", "from", "to"],
    "description": "Retrieves historical transactions for a wallet."
  },
  {
    "endpoint_group": "[BETA] Wallet Explorer API",
    "name": "Get Transactions",
    "path": "/1/wallet/raw-transactions",
    "method": "GET",
    "required_parameters": ["wallet"],
    "description": "Retrieves raw transactions for a wallet."
  },
  {
    "endpoint_group": "[BETA] Wallet Explorer API",
    "name": "Get Token Transfers",
    "path": "/1/wallet/token-transfers",
    "method": "GET",
    "required_parameters": ["wallet"],
    "description": "Retrieves token transfers for a wallet."
  },
  {
    "endpoint_group": "[BETA] Wallet Explorer API",
    "name": "Get NFTs Transfers",
    "path": "/1/wallet/nft-transfers",
    "method": "GET",
    "required_parameters": ["wallet"],
    "description": "Get NFTs Transfers"
  },
  {
    "endpoint_group": "[BETA] Wallet Explorer API",
    "name": "Get Smart Money",
    "path": "/1/wallet/smart-money",
    "method": "GET",
    "required_parameters": [],
    "description": "Retrieves smart money wallets."
  },
  {
    "endpoint_group": "[BETA] Wallet Explorer API",
    "name": "Get Wallet Trades",
    "path": "/1/wallet/trades",
    "method": "GET",
    "required_parameters": ["wallet"],
    "description": "Retrieves trades for a wallet."
  },
  {
    "endpoint_group": "Raw Data",
    "name": "Get Raw Events",
    "path": "/1/raw/events",
    "method": "GET",
    "required_parameters": [],
    "description": "Retrieves raw events."
  },
  {
    "endpoint_group": "Raw Data",
    "name": "Get Raw Blocks",
    "path": "/1/raw/block",
    "method": "GET",
    "required_parameters": [],
    "optional_parameters": ["blockchain", "blockId"],
    "description": "Retrieves raw blocks."
  },
  {
    "endpoint_group": "Raw Data",
    "name": "Get Raw Transaction",
    "path": "/1/raw/transaction",
    "method": "GET",
    "required_parameters": ["hash"],
    "description": "Retrieves a raw transaction by its hash."
  },
  {
    "endpoint_group": "Raw Data",
    "name": "Get Raw Block Transactions",
    "path": "/1/raw/block-transactions",
    "method": "GET",
    "required_parameters": ["block_number"],
    "description": "Get Raw Block Transactions"
  },
  {
    "endpoint_group": "Metacore",
    "name": "Get All Cryptocurrencies",
    "path": "/1/all",
    "method": "GET",
    "required_parameters": [],
    "description": "Retrieves all cryptocurrencies."
  },
  {
    "endpoint_group": "Metacore",
    "name": "Search by name",
    "path": "/1/search",
    "method": "GET",
    "required_parameters": ["input"],
    "description": "Searches for assets by name or symbol."
  },
  {
    "endpoint_group": "Metacore",
    "name": "Get Metadata",
    "path": "/1/metadata",
    "method": "GET",
    "required_parameters": ["id"],
    "description": "Retrieves metadata for a specific asset."
  },
  {
    "endpoint_group": "Metacore",
    "name": "Get Metadata (batch)",
    "path": "/1/multi-metadata",
    "method": "GET",
    "required_parameters": ["ids"],
    "description": "Retrieves metadata for multiple assets."
  },
  {
    "endpoint_group": "Metacore",
    "name": "Get Meta Trendings",
    "path": "/1/metadata/trendings",
    "method": "GET",
    "required_parameters": [],
    "optional_parameters": ["platform", "blockchain"],
    "description": "Retrieves trending assets."
  },
  {
    "endpoint_group": "Metacore",
    "name": "Get All Categories",
    "path": "/1/metadata/categories",
    "method": "GET",
    "required_parameters": [],
    "description": "Retrieves all asset categories."
  },
  {
    "endpoint_group": "Metacore",
    "name": "Get All Blockchains",
    "path": "/1/blockchains",
    "method": "GET",
    "required_parameters": [],
    "description": "Retrieves all supported blockchains."
  },
  {
    "endpoint_group": "Metacore",
    "name": "Query Blockchain Tables",
    "path": "/1/blockchain/query",
    "method": "POST",
    "required_parameters": ["query"],
    "description": "Queries blockchain tables with SQL."
  },
  {
    "endpoint_group": "Metacore",
    "name": "Decode Blockchain Events",
    "path": "/1/blockchain/decode",
    "method": "POST",
    "required_parameters": ["data", "topics"],
    "description": "Decodes blockchain events."
  },
  {
    "endpoint_group": "Misc",
    "name": "Get Sparkline",
    "path": "/1/sparklines",
    "method": "GET",
    "required_parameters": ["id"],
    "description": "Retrieves sparkline data for an asset."
  },
  {
    "endpoint_group": "Misc",
    "name": "Get CeFi Funding Rate",
    "path": "/1/market/cefi-funding-rate",
    "method": "GET",
    "required_parameters": ["instrument"],
    "description": "Retrieves CeFi funding rate."
  }
]
